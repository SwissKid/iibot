#!/bin/bash
msg=$@
source ./configuration
source ./functions
function commandme(){
	$iidir/commandme $channel > "$ircdir/$server/$channel/in"
}
set -- $msg
i=$1
shift
channel=$1
shift
message=$@
if [ "$(echo $i | head -c 1)" == '!' ]; then
#if the commands start with ! then they're seperated!
	msgowner `./scripts/ownercommand $msg`


else
	echo "Master wants me to $i $channel and $message"
	if [ "$(echo $channel | head -c 1)" != "#" ]; then
		echo $channel
		newchannel=$(echo "#""$channel")
		channel="$newchannel"
		echo $newchannel
	fi
##Commands (perhaps I should seperate this)
	#Join
	if [ "$i" == 'j' ] || [ "$i" == 'join' ]; then
			echo "/j $channel"
			echo "/j $channel" > "$ircdir/$server/in"
			echo "true" > "in/$channel"
			sleep 1
			commandme &
			msgowner "Joining $channel"
	#Speak
	elif [ "$i" == 'say' ] || [ "$i" == 'Say' ]; then
		echo "/privmsg $channel :$message"
		echo "/privmsg $channel :$message" > "$ircdir/$server/in"

	#Part
	elif [ "$i" == 'q' ] || [ "$i" == 'part' ] || [ "$i" == 'p' ]; then
		echo "$msg"
		msgowner "Parting $channel with message $message"
		echo -e "/part $channel :\"$message\"" > "$ircdir/$server/in"
		echo "false" > "in/$channel"
		

	#	#Quit  -- not yet functional
	#	elif [ "$i" == 'quit' ] || [ "$i" == 'Quit' ]; then
	#		echo "quit"
	#		msgowner Shutting Down
	#		control_c
	fi
fi
