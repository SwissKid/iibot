#!/bin/bash
msg=$@
source ./functions
set -- $msg
i=$1
shift
channel=$1
shift
message=$@
if [ "$(echo $i | head -c 1)" == '!' ]; then
#if the commands start with ! then they're seperated!
	msgowner `./scripts/ownercommand $msg`
else
	command=$(echo $i | tr [:upper:] [:lower:])
	echo "From ownercommand" >&3
	echo "Master wants me to $command $channel and $message"
	if [ "${channel:0:1}" != "#" ]; then
		newchannel=$(echo "#""$channel")
		channel="$newchannel"
	fi
##Commands (perhaps I should seperate this)
	#Join
	if [ "$command" == 'j' ] || [ "$command" == 'join' ]; then
		echo "/j $channel" >&3
		echo "/j $channel" > "$ircdir/$server/in"
		echo "true" > "./in/$channel"
		sleep 1
		commandme $channel&
		msgowner "Joining $channel"
	#Speak
	elif [ "$command" == 'say' ] ; then
		echo "/privmsg $channel :$message" >&3
		echo "/privmsg $channel :$message" > "$ircdir/$server/in"

	#Part
	elif [ "$command" == 'q' ] || [ "$command" == 'part' ] || [ "$command" == 'p' ]; then
		echo "$msg" >&3
		msgowner "Parting $channel with message $message"
		echo -e "/part $channel :\"$message\"" >&3
		echo -e "/part $channel :\"$message\"" > "$ircdir/$server/in"
		echo "false" > "in/$channel"
		

	#	#Quit  -- not yet functional
	#	elif [ "$command" == 'quit' ] || [ "$command" == 'Quit' ]; then
	#		echo "quit"
	#		msgowner Shutting Down
	#		control_c
	fi
fi
